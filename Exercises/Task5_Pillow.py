# -*- coding: utf-8 -*-
"""Day 6-7 PIL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R6xDO9jurdgMxyYyDu_T2iBGtPhJKSJK

# ARGUMENTS
"""

from PIL import Image
import argparse
def a():
    print("a")
def b():
    print("b")
def main():
    a()
    b()
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--num', type=int, required=True, help="choose between a=1 and b=2")
    args = parser.parse_args()
    if args.num == 1:
        a()
    elif args.num == 2:
        b()
    else:
        main()

"""#Corey's Tutorial"""

# Commented out IPython magic to ensure Python compatibility.
from PIL import Image   
import matplotlib.pyplot as plt
# %matplotlib inline
import os 
import numpy as np
#size_300 = (300,300)

#i.thumbnail(size_300)
#i.save('300/{}_300{}'.format(fn, fext)) #to change sizes

image1 = Image.open('puppy.jpg')

# NOTEBOOK (GOOGLE COLAB/ JUPYTER NOTEBOOK)
plt.imshow(image1)

# RUNNING CODE FROM PC/ TERMINAL
image1.show()

"""#Other Playlist - 
###John Hammond

##1 Intro, New()
"""

import PIL
from PIL import Image
#import Image
#def main( ): #{
size= width, height = 320, 240
image=Image.new( "RGB", size, "red") #rgb(%,%,%) hsl(#-360,%,%)
plt.imshow(image)
#}
#if ( __name__ == '__main__'):
#  main()



"""## 2 Image Open"""

import PIL
#def main( ): #{
filename="puppy.jpg";
image=Image.open( filename );
plt.imshow(image);
#}

"""##3 Blend"""

import PIL

#def main( ): #{
filename_one ="puppy.jpg";
filename_two ="cat.jpg";

image_one=Image.open( filename_one );
image_two=Image.open( filename_two );

size = (224,224)
image_one = image_one.resize(size) 
image_two = image_two.resize(size) 

image_blend = Image.blend( image_one,image_two,0.7)
plt.imshow(image_blend)
#}

"""##4 Composite"""

#import PIL

#def main( ): #{
  #filename_one ="pup.jpg";
  #filename_two ="pup1_mod.jpg";

  #image_one=Image.open( filename_one );
  #image_two=Image.open( filename_two );
  #0 - 255
  #128
mask  = Image.new("L", image_one.size, 0)
#plt.imshow(mask)
image_comp =  Image.composite( image_one,image_two, mask)
plt.imshow(image_comp)
#}

"""##5 Convert"""

import PIL
#def main( ): #{
filename="puppy.jpg";
image=Image.open( filename )
image_gray = image.convert("L")
plt.imshow(image_gray,cmap='gray')
#}

"""##6 Crop"""

import PIL
#def main( ): #{
filename="puppy.jpg";
image=Image.open( filename )
img_crop = image.crop((40,100,400,400))

plt.imshow(img_crop)

"""##7 Filter"""

from PIL import ImageFilter

#  1 0 1
#  1 0 1
#  1 0 1
#kernel = (22,0,22,22,0,22,22,0,22)
img1 = image.filter(ImageFilter.GaussianBlur(radius=1))
#img1 = image.filter(ImageFilter.Kernel((3,3), kernel, scale=None, offset=0))
plt.imshow(img1)
img2 = image.filter(ImageFilter.CONTOUR)
plt.imshow(img2)
img3 = image.filter(ImageFilter.DETAIL)
plt.imshow(img3)
img4 = image.filter(ImageFilter.EDGE_ENHANCE)
plt.imshow(img4)
img5 = image.filter(ImageFilter.EDGE_ENHANCE_MORE)
plt.imshow(img5)
img6 = image.filter(ImageFilter.EMBOSS)
plt.imshow(img6)
img7 = image.filter(ImageFilter.FIND_EDGES)
plt.imshow(img7)
img8 = image.filter(ImageFilter.SMOOTH)
plt.imshow(img8)
img9 = image.filter(ImageFilter.SHARPEN)
plt.imshow(img9)
#}

#if (__name__ == "__main__"):#{
    
   # main();
#}

"""## 8 Size"""

size= width, height = image.size
print(image.size[0])  
#}

"""##9 GetColors"""

import PIL

filename="pup.jpg";
image=Image.open(filename);
size= width, height = image.size
print(image.getcolors(width*height))

"""##10 Get Pixel"""

import PIL
def main( ): #{
  filename="pup.jpg";
  image=Image.open(filename);
  size= width, height = image.size

  coordinate= x,y = 180, 69
  print(image.getpixel(coordiante))

  image.show()
#}

#if (__name__ == "__main__"):#{
    
    #main();
#}

"""##11 Get Data"""

import PIL
def main( ): #{
  filename="pup.jpg";
  image=Image.open(filename);
  size= width, height = image.size

  print(list(image.getdata()))

"""##12 Paste"""

import PIL
def main( ): #{
  filename="pup.jpg";
  image=Image.open(filename);
  size= width, height = image.size

  image.paste("blue", (80, 20, 180, 200) )
  image.show()

"""##13 Thumbnails"""

import PIL
def main( ): #{
  filename="pup.jpg";

  image=Image.open(filename);
  size= width, height = image.size

  image.thumbnail((128, 128), Image.NEAREST)
  image.show()

"""##14 Resize"""

import PIL
def main( ): #{
  filename="pup.jpg";

  image=Image.open(filename);
  size= width, height = image.size

  image.resize(500, 100)
  image.show()

"""##15 Rotate"""

import PIL
def main( ): #{
  filename="pup.jpg";

  image=Image.open(filename);
  size= width, height = image.size

  color_to_find = (0,0,0,0)
  color_to_replace = (255,255,255,255)

  rotated_image_data = image.rotate(45)

  new_image_data = []
  for color in list(rotated_image.getdata()):
    if (color == color_to_find):
      new_image_data += [color_to_replace]
    else:
      new_image_data += [color]
  #new_image= Image.frombuffer(image.mode, size, new_image_data)
  
  rotated_image.putdata(new_image_data) 
  rotated_image.show()
