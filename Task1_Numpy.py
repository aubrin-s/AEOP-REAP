# -*- coding: utf-8 -*-
"""Day 2-3 NumPy .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qtLIaicP-51Gja2EF3EOWBIqsVK16T6B

NumPy Exercises

# TASK 1 [Arrays]
"""

import numpy

print numpy.array(raw_input().split(),float)[::-1]

import numpy

def arrays(arr):
    # complete this function
    # use numpy.array

arr = raw_input().strip().split(' ')

import numpy
A = [1, 2, 3, 4, -8, -10]

def arrays(arr):
  arr = raw_input().strip().split(' ')
A.reverse()
print(A)

import numpy as np
A = [1, 2, 3, 4, -8, -10]

ArrayA= np.array(A, dtype=np.float32)


print(ArrayA)

"""# TASK 2 [Shape and Rephape] Complete"""

import numpy

my_1D_array = numpy.array([1, 2, 3, 4, 5])
print(my_1D_array.shape)

import numpy

change_array = numpy.array([1,2,3,4,5,6,7,8,9])
change_array.shape = (3, 3)
print(change_array)

"""# TASK 3 [Transpose and Flatten] Complete"""

import numpy

my_array = numpy.array([[1,2],
                        [3,4]])
print(numpy.transpose(my_array))

my_array = numpy.array([[1,2],
                        [3,4]])
print(my_array.flatten())

"""# TASK 4 [Concatenate]"""

import numpy

array_1 = numpy.array([[1,2,3],[0,0,0]])
array_2 = numpy.array([[0,0,0],[7,8,9]])

print(numpy.concatenate(array_1, array_2), axis = 1)

"""# TASK 5 [Zeros and Ones] looked at answers"""

import numpy
N = map(int, raw_input().split())
print(numpy.zeros(N, dtype = numpy.int))
print numpy.ones(N, dtype = numpy.int)

"""# TASK 6 [Eye and Identity] Complete"""

import numpy
print(numpy.identity(3))

"""# TASK 7 [Array Mathematics] looked at answers"""

import numpy

n,m=map(int,input().split())
A=numpy.array([list(map(int,input().split())) for i in range(n)])
B=numpy.array([list(map(int,input().split())) for i in range(n)])
print(A+B,A-B,A*B,A//B,A%B,A**B,sep='\n')

import numpy
l=map(int,raw_input().split())
a=[]
b=[]
for i in range(l[0]):
    a.append(map(int,raw_input().split()))
for i in range(l[0]):
    b.append(map(int,raw_input().split()))
a=numpy.array(a)
b=numpy.array(b)
print(numpy.add(a, b))
print(numpy.subtract(a, b))
print(numpy.multiply(a, b))
print(numpy.divide(a, b))
print(numpy.mod(a, b))
print(a**b)

"""# TASK 8 [Floor, Ceil and Rint] Complete"""

import numpy

my_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])
print(numpy.floor(my_array))
my_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])
print(numpy.ceil(my_array))
my_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])
print(numpy.rint(my_array))

"""# TASK 9 [Sum and Prod] Complete"""

import numpy

my_array = numpy.array([ [1, 2], [3, 4] ])

print(numpy.prod(my_array, axis = 0))           
print(numpy.prod(my_array, axis = 1))            
print(numpy.prod(my_array, axis = None))        
print(numpy.prod(my_array))

import numpy

my_array = numpy.array([ [1, 2], [3, 4] ])
     
print(numpy.prod(my_array))

"""# TASK 10 [Min and Max] Complete"""

import numpy

my_array = numpy.array([[10, 5], 
                        [3, 7],
                        [6, 8],
                        [4, 9]])
print(numpy.min(my_array))

"""# TASK 11 [Mean, Var, and Std] Complete"""

import numpy

my_array = numpy.array([ [1, 2], [3, 4] ])

print(numpy.mean(my_array, axis = 1))
print(numpy.var(my_array, axis = 0))
print(numpy.std(my_array, axis = None))

"""# TASK 12 [Dot and Cross]"""

import numpy

A = numpy.array([ 1, 2], [3, 4 ])
print(A * A)

import numpy

A = numpy.array([[ 1, 2 ],[3,4]])
B = numpy.array([[ 1, 2 ],[3,4]])

print(numpy.dot(A, B))
#print(numpy.cross(A, B))

import numpy     #looked it up
N = int(raw_input())
A = numpy.array([map(int, raw_input().split())for _ in range(N)])
B = numpy.array([map(int, raw_input().split())for _ in range(N)])
print numpy.dot(A, B)

"""# TASK 13 [Inner and and Outer] Complete"""

import numpy

A = numpy.array([0, 1])
B = numpy.array([2, 3])

print(numpy.inner(A, B))
print(numpy.outer(A, B))

"""# TASK 14 [Polynomials] Complete"""

import numpy

print(numpy.polyval([1.1, 2, 3], 0))

"""# TASK 15 [Linear Algebra] Complete"""

import numpy

print(numpy.linalg.det([[1.1 , 1.1], [1.1, 1.1]]))